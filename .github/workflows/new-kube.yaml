name: Solar System Workflow project new kube

on:
  workflow_dispatch:
#   push:
#     branches:
#       - main
#       - 'feature/*'

jobs:
  docker-build:
    name: docker build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker Build
        run: |
          docker build -t githubactionsiti2025.azurecr.io/${{ secrets.DOCKER_USERNAME }}/ga-application:${{ github.sha }} .
      - name: Docker Login to ACR
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login githubactionsiti2025.azurecr.io -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker Push to ACR
        run: |
          docker push githubactionsiti2025.azurecr.io/${{ secrets.DOCKER_USERNAME }}/ga-application:${{ github.sha }}

  dev-deploy:
    name: Deploy to Dev Env
    runs-on: ubuntu-latest
    needs: docker-build
    env:
      MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
      MONGO_USERNAME: "ahmed"
      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install kubectl CLI
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.26.0'

      - name: Set Kubeconfig Context
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Fetch Kubernetes Cluster Details
        run: |
          kubectl version --short
          echo "-----------------------------------------"
          kubectl get nodes

      - name: Replace tokens in manifests
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files:
             kubernetes/development/*.yaml
        env:
          NAMESPACE: karim_khaled
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: githubactionsiti2025.azurecr.io/${{ secrets.DOCKER_USERNAME }}/ga-application:${{ github.sha }}


      - name: Show processed manifests
        run: cat kubernetes/development/*.yaml

      - name: Ensure Namespace Exists
        run: |
            if ! kubectl get namespace karim_khaled; then
            kubectl create namespace karim_khaled
            fi

      - name: Create MongoDB secret
        run: |
            kubectl -n karim_khaled delete secret mongo-db-creds --ignore-not-found
            kubectl -n karim_khaled create secret generic mongo-db-creds \
            --from-literal=MONGO_URI=${{ env.MONGO_URI }} \
            --from-literal=MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
            --from-literal=MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}

      - name: Deploy manifests
        run: kubectl apply -f kubernetes/development

        